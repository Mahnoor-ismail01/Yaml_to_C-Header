---
kind: instruction
name: andn
long_name: AND with inverted operand
description: Performs the bitwise logical AND operation between `xs1` and the bitwise inversion of `xs2`. 
assembly: xd, xs1, xs2
access:
  s: always
  u: always
  vs: always
  vu: always
data_independent_timing: true
operation(): |
  if (implemented?(ExtensionName::B) && (CSR[misa].B == 1'b0)) {
  raise (ExceptionCode::IllegalInstruction, mode(), $encoding);
}

X[xd] = X[xs2] & ~X[xs1];
...
